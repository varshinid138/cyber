 insecure design. This is failure of web developer only or application developer. Suppose what happens in security design, let's take an example. Suppose an app developer, he is writing a code for some web application. And while writing the code, he also tests the code right. While testing the code, what he does, he disable some feature. Suppose like feature of like multi-factor authentication. Whenever you open up your Gmail, if you have enabled this to factor authentication or multi-factor authentication, as code will be sent to your mobile phone, to SMS or other. If you have enabled this in any of the social media, you will get this OTP to your message SMS. So what happens here? What if he while testing, he disable this feature in the web application and he send this into the production without send this to the production without enabling this feature in the code, in the source code. What happens? Of course, this will be vulnerable and with the help of brute force or mystery or any of their attack, a hacker can able to get into your account. So this is the typical example of insecure design. This will be whatever the problem is there. He need to write the code without any bugs or errors and application developer. So here, the things will fall on app developer. How he does a secure application, how he writes the code in order to make the application secure. Security misconfiguration again. Not having properly configured or insufficiently hardened. What is insufficiently hardened? That means if we have set our web application for default account or default password, it will be easy for hacker to get or any of the security policy is not been there set properly. It will be vulnerable for or attacker to attack that web application as well. So these are some of the things in security misconfiguration. Unable and outdated components, this is pretty much straightforward. You can take the example of your Android smartphone only. Every month or every two months, what you get, you get security patch updates. For improving some of the system apps, some of the OS, Android OS, some of the features in OS and also for security purpose, you will get those apps. So whatever the things, software that has been installed in your host machines, it should be updated regularly in order to make these things not vulnerable to the attackers. Authentication means of course, when you visit some social media of the password, you enter username and password and this website will get access to your data after verifying the legitimate person, whether you are the person and this is your data and you are accessing this data. Here what happens if you use any weak passwords or any default passwords or some because of some of the other things also, what happens any of the attacker on hacker can able to access your data. Then we have something called software and data and security security values. Similar only when you visit some website, you enter any social media or any other website to login with your password and username and when you access your data, it should be in its original form. Whatever the data of the in present inner account, it should be in the in its original form, it should not be modified or tampered. That is what we call as integrity. If this happens, if some attacker does some attacks and he modifies our data, that is what we call integrity failure or data integrity failure. Then we have something called security logging and multi-failures, I will explain that as well. See whenever a person access a web server and access some of the things in the data phase, there will be something called log files. What this log files does? It stores some of these details such as who is the someone or admin of this website, log in to this page that activity will be stored here. Like log in detail, this person has logged in at this time. This person has logged out at this time. So this person updated some data. So all these details will be saved in this log files. If you doesn't enable this feature and it doesn't save all the activities of the database or server and all these things are not saved in the log files. What happens if some attacker or hacker does try to access your database through some injection attacks and it will be not saved or visible in the log files. What happens? You may able to not stop this attack in the real time. So that's the theme or concept behind. This log server of log, there is log server as well which store all these files, log files. In these log files, all these details will be stored. So with the help of this, we can able to stop this attack in real time. So that's the thing in security logging in monitoring failures. If we fail to monitor this activity, the attacker can easily get access to our data and we can't stop that attacking in real time. If we can able to get all these details from log files, we can able to stop that attack in real time. Then we have something called server side request forgery. What attacker does? He sent some malicious code to this public server or any web server and this server in turn requests this database or any other server. Then it will, the response will be sent back to this public server and in turn, this response will be returned to the attacker. So this is the typical example. What here is happening? Here attacker is sending some malicious code to the server and the server can't they want to figure out whether I need to send the response or not because he has returned the code in that form. Suppose you can take the example from cross-set scripting, he has returned some code right similar code he writes here and he can able to fetch from database from server or from database only. So this is the server side script forgery.