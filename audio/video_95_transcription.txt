 See, this is the methodology you have been familiar with already. In information gathering, if you remember in reconnaissance or put printing what we did, we gather all the information of that particular website or target company or organization right. Similarly, whenever you want to attack some web application, you want first, the most important thing is to gather all these information. Information gathering will be the first step. Second, identifying the entry points. Entry points means like a parameter you can do parameter tampering or SQL injection or all these. Suppose you have some input. Yeah, you have some input. You can put some malicious code here and you can inject some of the commands or queries in order to access some of the data. So these are some of the entry points you can find like in URL or in this input boxes or some of the other places. So bypassing client side controls like suppose you are supposed to enter like a string in this input box, or sorry integers in this input box, what happens if you give some string or any name. So you can try out these things in the web application. If you have this web application is insecure, we can able to, it will, what it will do. Instead of integer, it will take string as an input. So those are the things you can see in bypassing client side control. Apart from that, if you remember vulnerability analysis, what are the tools we used in vulnerability analysis module? Openverse Nases and Bob Suite. So with the help of these tools also, we can able to find out the vulnerabilities of any web of particular web application and with those vulnerabilities, we can able to exploit these vulnerabilities. So basically we can take advantage of those vulnerabilities and attack that particular web organization. So this is pretty much straight forward like gathering information, identifying library points, bypassing clients, client side controls like putting some input in URL or any of the input that have given to client side users. Then by using some vulnerabilities, scanning tools, we can find out the vulnerability and then we can take advantage of those. So then we have something called application testing. So you can go and check this was testing guide. So in this guide, you can able to get all the details of how you can test your web application, what are the things you need to consider while testing web application, you can all do here. Like analysis of that particular application, flight side controls as I explained you access control, admin privileges, all those things, authentication mechanism, only getting access to those legitimate users. Session management, I have explained you by a attacker what he can do, can steal the session idea of a particular person and enable to access your data or your account without login credentials. Authorization stream, you have launched multiple web applications in the same web server, what attacker can do. He can able to attack all these web applications that are present in that same server. So that is the concept of shared environment application logic. I have explained you these input things that are there in the website. What happens if you give negative integer to this input? So these are the things you can try to tamper the logic of the website where the logic things happens. In the business layer only, in the application layer, all the logic will be done and suppose you want to access some of the data, it will take the input, this layer and it will it can fetch the data from the database. Okay, that's about application logic, database credentials is nothing but getting the access into the database. Suppose if you have given default account and default password, you can able to do that. See there is something called proxy server. What happens here? You can take the example of burpsuit only. Suppose this is client, in normal client server model, what happens? The request, go to the application web server and it will get the response right. In the proxy server, suppose it is located in the local machine. Whatever the request you send, it will be first sent through proxy server, then the proxy server will send that request to the web server. And also if we want to fetch some data from the application server, it will do that as well. Here what we can able to do with the help of proxy server, we can able to get access to the block good websites, IDOR, IP address and also we can able to monitor and analyze the data traffic that has been going on here. Through this from web server to client, whatever the traffic data traffic that we can monitor, we can analyze and we can able to send the modify, even modify the request as well. So with the help of proxy server, we can able to send some of the automated request to the web server as well. Automated request to the web server and so many things we can do with the proxy server. So that's about how we can intercept the data traffic through this proxy server. You can use burpsweet as well. With the help of burpsweet, you can do this. You can intercept. So these are some of the tools open vast. Nases, if you have used nases that's more than enough, then if you want to use this as more or less, both are similar only. Both will give you almost similar output. Plus we have some tool from OAS as well.