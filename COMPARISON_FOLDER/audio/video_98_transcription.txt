 See, I will now I'll show you what exactly these delimitors are. Let's open up vulnerability site website again. This is this time I'm going with test php not one web.com So, let's open up vulnerability site page. Suppose, like this is the sign-up page. What happens if I give that single code or instead of user name, I'm using this delimitor single code. As soon as I click the sign-up button, here I'm getting some error. What this error means, this means that this website is vulnerable to SQL injection. Try out any of the websites and use these delimitors in the in the in the instead of giving user name, use these delimitors. As soon as you get this error, this exactly means that this website is vulnerable to SQL injection and you can able to perform some of these SQL injection. And not only this with the help of these some of these errors, you can able to find out the user may user, sorry, table name that is present in the database and all those other details. And once you able to know the table name, you can able to alter the data of that particular table or delete the table itself. So, so many things we can do with the help of SQL injection. See, these the single code is we call as character delimitor and we can use string delimitor as well. So, where we use and how we use a lexplain. And there is something called single line delimit, command delimitor and also query delimitor. So, where we use all these things, let's take let me explain you with an example. See, in payload we are using what we are using. See, your we are copy pasting in this log-in credential. What exactly we are doing here? What's the meaning of this payload? See, this here we are using two delimitors. One is this command delimitor, single line command delimitor and another one is character string delimitor. Okay, so what's the meaning of this? This the meaning of this is. See, the meaning of this statement is suppose instead of password, the password should be like nothing or it is one is equal to one and ignore whatever comes after this command. So, basically there is a sequence statement like give access or select. Basically not select. Give access to those people whose user name is this. Is equal to something this and whose password is something this like it could be anything. Give access to the database only to the user was registered. Here what we are doing? We are giving a or condition like this sequence statement has some weakness that is instead of checking this. It it it verifies this condition as well. So, one we know the condition one is equal to one. It is true condition. So, what happens here? This it will give us access and it will ignore the rest of the things like it will ignore the password whatever the password may be and it will verify this condition like whatever the user name may be. It will just check or we can verify the condition one is equal to one. Now, it will give us the access to the database without it. Without whatever the user name they have said we can able to show this condition through this condition as true and get access to the database. See, and also with the semicolon delimiter what we can do we can use two sequoals statement. Suppose in website there is a input box. Here we can do two things like select some table name. Everything from some table name we can give and I will put semicolon and what I can do I can give some drops command as a drop this some other table name table name two or something like that. So, what here here I am doing I am giving two sequel commands and why how I can give those two sequel commands with the help of which delimiter with the help of this semicolon delimiter we can able to see remember these things with the help of this single code and double codes we can get the error we can find out some of the details about that sequel. And also we can use these delimiters in cracking these logging credentials or bypassing these logging credentials and also with the help of this semicolon delimiter we can use two sequel in single input box only we can able to perform two sequel statements at a time. So, I hope you got how these delimiters are used in sequel injection. See there is one more example here select name from name email from user's table where user name is equal to fried and password is equal to secret. Here see if you if we know the user name and we don't know the password whatever the password is what we can do we can fill up the same exact password sorry user name and for instead of password what we can what we are doing here we are instead of the password we are injecting this sequel query or sequel payload. So, what happens what is happening here here the sequel will engine will check for the statement for this statement and it will check for this condition if the condition is proved it will give us access to the data. So, this is how the sequel injection is done.