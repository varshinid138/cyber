 Okay, let's move on here. Suppose take the example of Zomot only. See, Zomotol vAxis Google Maps, right? It doesn't access Google map. It access Google map API. So there is something called Google map system. So you can, whenever you order something, you see, you can see the delivery person and you can see the map, right? So how that is been, how we can see that? Through API, exactly. See, what happens here? Zomotol doesn't access directly Google map system. What it does? It access a web server. And that is Google map API. Which will be fetched from, whenever the request will be sent from Zomotol to this server, it will intern request this Google map system. And this Google map system will give back the response to this server and this Google map API will be accessed by this format. This is how things works. And for the security purpose, we have something called API key. So that only secure web application developers or official, whatever the business is there, they can access this API. So what if any attacker or hacker access the API and he publishes his website, he can able to dashboard steal some of the customer's data, right? So that's why we have some security features that is API key. So I hope you got the basic idea of what exactly API is, how things works in app or any of the web application. These are also API only, rest API, so API, all these things will basically allow us to access all these things that are present in the true API only, we can able to access all those things. Whatever the functionality is present in an application, we can access from our server or from our application through this API. I hope you got the idea of all these things. See this concept only application running on a different server is available for crime. Server is available for clients. That means this one, whatever that is present in web server that will be available for clients. This different means if suppose if it is available or fetched from application server, it could fetch the data or whatever we request from web server or application server. Often accessible directly HTML without API also, we can able to grasp or fetch the data from the server directly, the HTML page web page or through API. So web server is responsible for connection, so these are the things that happens whenever we request for any web page. Whenever we want to fetch the data in any of the web applications. So these are some of the encoding schemes that we can check. See this is the example of HTML entity. For greater than we need to write this one. So see whatever these are the tags inside the tags if you write something it will appear like this in the web page. So if you use ampersand LT, it will be appear as less than here in the web page. So this is we call as HTML entity encoding. Whatever the entity you want to encode, you can encode in this month. And apart from that, we have something called URL encoding, 20% H20 for instead of and we use percentage 20 instead of question mark. This will appear basically whatever you enter in URL, it won't be in the regular form. It will be converted into hexadecimal digit. So this is what we call as URL encoding. So this is web 2.0 is nothing but interactivity in the website. See some of the older website if you remember all of them will be statically. There is no interactivity much interactivity will be there. So with the help of this one, we can see so much interactivity in the website. And also the current version is web 3.0. And if you can check that out as well. Secure application development is nothing but these four app developers you want to make sure their applications will be secure from the hackers or attackers. So these are some of the terminologies we need to remember.