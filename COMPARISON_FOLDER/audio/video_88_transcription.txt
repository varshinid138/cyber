 So, let's move on to web server attacks, DNS server hijacking, redirect queries to imposter web server by using DNS query result from broke DNS server. This is basically DNS cache poisoning only. You can get the idea from this. Instead of getting the website from the original server, what happens? Because this is nx record or a record of DNS. What happens? An attacker can easily redirect you to his web server and he to his website as well. What happens in this cache? It usually stores all the websites and he will store for like some days. So even if you use Opera day or two, you will be redirected to this website only. So that's the concept of DNS cache poisoning. That's almost similar to this server hijacking only. What the imposter will do? He'll redirect us. Redirect web queries to imposter web server. If you are going to some website, instead of going to that original website, you will be redirected to attacker's web server or web server through this attacker's web server, you will be redirected to his web site. So that's the concept of DNS server hijacking. DNS amplification attack, the size and number of DNS queries are increased by using large DNS. You'll have learned about DOS attack. This is simply DOS attack only. You're flooding the DNS packets by using multiple compromised PCs. Directory transfer cell attack. By if you're using you will going to study SQL injection in your upcoming module. If you use inject SQL queries and get able to access to the database of the website, you may be able to get all these things like credentials. Allows the attacker to read arbitrary files on the server that is running in this include application code, data credentials, back end systems, sensitive, sensitive OS files, all these things. You can be able to get for example, suppose you're accessing some website and you are in some directory let file something something. You want to open some image by changing the sum of the things in URL only you can able to get into some root directory and all. And from root directory you can able to access other directory files as well. So that is the idea behind or if you able to inject SQL queries for example there is credential like user name password and all those. And if you put SQL query like one or one and element to solve these things, you may be able to easily bypass the credential and get into the database and you may get access to all these files. So this is the this is what we call directory transfers attack. It is HTTP attack that allows attackers to access restricted directory files and also execute commands outside the root directory. So that's about web server at HTTP response splitting attack. Taker inserts HTTP address okay they will gonna look in detail about this in next slide. HTTP cache poisoning attack, placing invalid malicious data within browser's cache. User queries go to row web server instead of real web server implemented by HTTP response splitting same this only. What happens here? HTTP response splitting attack involves adding header response to data into the input fields or the server split the response into two responses. Because this is a website. This is some website. What happens? The attacker put some of the code or script in the input file of the website. And the server in turn this will go to the server. And the server in turn in turns create not one response but two responses. He'll put some some of the code like this. First response controlled by the attacker and second response controlled by second response will be discarded. So attacker passes malicious data to a vulnerable application. Any of the web application as well. And the application includes the data in the HTTP response header. The attacker can control the first response root redirect user to malicious website. If someone visit that website and click that same input form, he will be redirected to attackers website.